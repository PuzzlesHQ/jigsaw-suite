plugins {
    id 'java'
    id 'java-gradle-plugin'
    id("io.github.sgtsilvio.gradle.maven-central-publishing") version "0.4.0"
    id 'maven-publish'
}

group = 'dev.puzzleshq'

def ref = System.getenv("GITHUB_REF")
version = ((ref == null) ? "refs/tags/0.0.0-beta" : ref).replaceAll("refs/tags/", "")

String mavenUrl = System.getenv("MAVEN_URL")

String envRepo = System.getenv("MAVEN_REPO")
String mavenRepo = envRepo != null ? envRepo : "releases"

repositories {
    maven {
        name = 'Fabric'
        url = 'https://maven.fabricmc.net/'
    }
    maven {
        url = "https://jitpack.io"
    }
    gradlePluginPortal()
    mavenCentral()
}

dependencies {
    gradleApi()

    implementation "org.ow2.asm:asm:9.8"
    implementation "org.ow2.asm:asm-tree:9.8"
    implementation "org.ow2.asm:asm-util:9.8"
    implementation "org.ow2.asm:asm-analysis:9.8"
    implementation "org.ow2.asm:asm-commons:9.8"

    implementation "dev.puzzleshq:access-writer:1.0.4+c"
    implementation "dev.puzzleshq:mod-format-framework:1.0.0"
    implementation "org.hjson:hjson:3.1.0"

    implementation "com.gradleup.shadow:shadow-gradle-plugin:8.3.8"
    implementation("io.github.sgtsilvio.gradle.maven-central-publishing:io.github.sgtsilvio.gradle.maven-central-publishing.gradle.plugin:0.4.1")
}

gradlePlugin {
    plugins {
        cosmic_reach_plugin {
            id = 'jigsaw-cosmic-reach'
            implementationClass = 'dev.puzzleshq.jigsaw.premade.CosmicReachPlugin'
        }

        project_zomboid_plugin {
            id = 'jigsaw-project-zomboid'
            implementationClass = 'dev.puzzleshq.jigsaw.premade.ProjectZomboidPlugin'
        }

//        puzzle_publishing {
//            id = 'jigsaw-puzzle-publishing'
//            implementationClass = 'dev.puzzleshq.jigsaw.premade.PuzzlePublishing'
//        }
//
//        publishing {
//            id = 'jigsaw-publishing'
//            implementationClass = 'dev.puzzleshq.jigsaw.publishing.Publishing'
//        }

        sync {
            id = 'jigsaw-sync'
            implementationClass = 'dev.puzzleshq.jigsaw.sync.JigsawSync'
        }
        access {
            id = 'jigsaw-access'
            implementationClass = 'dev.puzzleshq.jigsaw.access.JigsawAccess'
        }
        interface_inject {
            id = 'jigsaw-inject'
            implementationClass = 'dev.puzzleshq.jigsaw.inject.JigsawInject'
        }
        game {
            id = 'jigsaw-game'
            implementationClass = 'dev.puzzleshq.jigsaw.game.JigsawGame'
        }
        loader {
            id = 'jigsaw-loader'
            implementationClass = 'dev.puzzleshq.jigsaw.modloader.LoaderPlugin'
        }
        zomboid {
            id = 'jigsaw-zomboid'
            implementationClass = 'dev.puzzleshq.jigsaw.zomboid.ZomboidPlugin'
        }
        cosmic {
            id = 'jigsaw-cosmic'
            implementationClass = 'dev.puzzleshq.jigsaw.cosmic.CosmicPlugin'
        }
        remap {
            id = 'jigsaw-remap'
            implementationClass = 'dev.puzzleshq.jigsaw.remap.JigsawRemap'
        }
        transform {
            id = 'jigsaw-transform'
            implementationClass = 'dev.puzzleshq.jigsaw.transform.JigsawTransform'
        }
    }
}
java.toolchain.languageVersion.set(JavaLanguageVersion.of(8))

publishing {
    repositories {
        maven {
            name = "PuzzleHQsMaven"
            url = mavenUrl + "/" + mavenRepo
            credentials {
                username = System.getenv("MAVEN_NAME")
                password = System.getenv("MAVEN_SECRET")
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
        mavenLocal()
    }

    publications {
        maven(MavenPublication) {
            groupId = p_group
            artifactId = p_id

            from components.java

            pom {
                name = p_name
                description = p_desc
                url = p_git

                licenses {
                    license {
                        name = "GNU Lesser General Public License"
                        url = "https://www.gnu.org/licenses/lgpl-3.0.html"
                        distribution = "LGPL"
                        comments = "This project includes LGPL-licensed components."
                    }
                }

                developers {
                    developer {
                        id = 'mrzombii'
                        name = 'Mr Zombii'
                        email = 'thezombiigames@gmail.com'
                    }
                    developer {
                        id = 'crab-k1ng'
                        name = 'CrabKing'
                    }
                }
                scm {
                    connection = "${p_git}.git"
                    developerConnection = "${p_git}.git"
                    url = "${p_git}.git"
                }
            }
        }
    }
}

if (ref != null) {
    signing {
        useGpgCmd()
        sign(publishing.publications[0])
    }
}